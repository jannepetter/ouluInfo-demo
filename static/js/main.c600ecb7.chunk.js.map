{"version":3,"sources":["graphql/queries.js","components/Menubar.js","components/PresetImage.js","components/CameraComp.js","components/CameraPage.js","components/ParkCard.js","components/ParkingPage.js","components/RoadWork.js","components/RoadWorksPage.js","components/Announcement.js","components/TrafficAnnPage.js","App.js","utils/functions.js","reportWebVitals.js","index.js"],"names":["GetAllCameras","gql","GetAllCarParks","GetAllRoadworks","GetAllTrafficAnnouncements","Menubar","setPage","page","styleParkki","styleCameras","styleRoadW","styleTrafficAnn","clickHandler","pageinfo","window","scrollTo","id","className","onClick","PresetImage","imageUrl","time","presentationName","useState","showlarge","setShowLarge","aika","replace","suunta","imageclass","src","alt","CameraComp","name","presets","map","i","measuredTime","presetId","cameraPage","cameras","loading","cameraList","data","k","cameraId","ParkCard","place","placeName","max","maxCapacity","available","spacesAvailable","ParkingPage","parking","parkingData","carParks","p","carParkId","RoadWork","work","kuvaus","description","aloitettu","startTime","loppuu","endTime","RoadWorksPage","roadworks","roadW","w","Announcement","announcement","alkaa","otsikko","title","TrafficAnnPage","trafficAnnouncements","announcementData","a","App","useQuery","navbar","document","getElementById","lastscroll","addEventListener","position","pageYOffset","style","top","clientHeight","scrollListener","CameraPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","link","createHttpLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render"],"mappings":"wzCAEO,IAAMA,EAAgBC,IAAH,KAiBbC,EAAiBD,IAAH,KAadE,EAAkBF,IAAH,KAgBfG,EAA6BH,IAAH,KC1BxBI,G,MAnBC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACpBC,EAAuB,YAATD,EAAqB,WAAa,GAChDE,EAAwB,YAATF,EAAqB,WAAa,GACjDG,EAAsB,cAATH,EAAuB,WAAa,GACjDI,EAA2B,eAATJ,EAAwB,WAAa,GAErDK,EAAe,SAACC,GAClBP,EAAQO,GACRC,OAAOC,SAAS,EAAG,IAEvB,OACI,sBAAKC,GAAG,SAASC,UAAU,mBAA3B,UACI,qBAAKC,QAAS,kBAAMN,EAAa,YAAYK,UAAW,iBAAmBR,EAA3E,qBACA,qBAAKS,QAAS,kBAAMN,EAAa,YAAYK,UAAW,iBAAmBT,EAA3E,yBACA,qBAAKU,QAAS,kBAAMN,EAAa,cAAcK,UAAW,iBAAmBP,EAA7E,wBACA,qBAAKQ,QAAS,kBAAMN,EAAa,eAAeK,UAAW,iBAAmBN,EAA9E,6BCGGQ,G,MAlBK,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAAuB,EACxBC,oBAAS,GADe,mBACnDC,EADmD,KACxCC,EADwC,KAEpDC,EAAOL,EAAOA,EAAKM,QAAQ,IAAK,KAAKA,QAAQ,IAAK,IAAIA,QAAQ,OAAQ,IAAM,GAC5EC,EAASN,GAAsC,GAKjDO,EAAaL,EAAY,aAAe,aAC5C,OACI,gCACI,qBAAKN,QAAS,WALlBO,GAKoCD,IAAYP,UAAWY,EAAYC,IAAKV,EAAUW,IAAI,cACtF,uBACA,uBAAOd,UAAU,YAAjB,SAA8BS,EAAO,IAAME,SCFxCI,EAVI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAExB,OACI,sBAAKjB,UAAU,YAAf,UACI,sBAAMA,UAAU,WAAhB,SAA4BgB,IAC3BC,EAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAA8BhB,SAAUgB,EAAEhB,SACxDC,KAAMe,EAAEC,aAAcf,iBAAkBc,EAAEd,kBADVc,EAAEE,iBCYnCC,EAjBI,SAAC,GAAuB,IAArBhC,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QAExB,GAAa,YAATjC,GAAsBiC,EAAQC,QAC9B,OAAO,wBAEX,IAAMC,EAAaF,EAAQG,KAAKH,QAEhC,OACI,gCACI,qBAAKvB,UAAU,YAAf,SACI,cAAC,EAAD,CAAoCG,SAAS,2DACzCC,KAAK,GAAGC,iBAAiB,cADZ,sBAGpBoB,EAAWP,KAAI,SAAAS,GAAC,OAAI,cAAC,EAAD,CAA6BX,KAAMW,EAAEX,KAAMC,QAASU,EAAEV,SAArCU,EAAEC,iBCDrCC,G,MAZE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACVC,EAAYD,EAAMd,KAAOc,EAAMd,KAAO,GACtCgB,EAAMF,EAAMG,YAAcH,EAAMG,YAAc,GAC9CC,EAAYJ,EAAMK,gBAAkBL,EAAMK,gBAAkB,GAClE,OACI,sBAAKnC,UAAU,WAAf,UACI,6BAAK+B,IACL,uDAAuBC,KACvB,0CAAaE,UCMVE,EAbK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAEnB,GAAa,YAF0B,EAAX/C,MAEF+C,EAAQb,QAC9B,OAAO,wBAEX,IAAMc,EAAcD,EAAQX,KAAKa,SACjC,OACI,sBAAKvC,UAAU,mBAAf,UACKsC,EAAYpB,KAAI,SAAAsB,GAAC,OAAI,cAAC,EAAD,CAA4BV,MAAOU,GAApBA,EAAEC,cACvC,2BCEGC,G,MAbE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEVC,EAASD,EAAKE,YAAL,GAAyBF,EAAKE,YAAL,GAAyB,GAC3DC,EAAYH,EAAKI,UAAYJ,EAAKI,UAAUrC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,IAAM,GACjFsC,EAASL,EAAKM,QAAUN,EAAKM,QAAQvC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,IAAIA,QAAQ,OAAQ,IAAM,GACpG,OACI,sBAAKV,UAAU,oBAAf,UACI,4BAAI4C,IACJ,qDAAqBE,KACrB,yDAAmBE,UCIhBE,EAZO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAErB,GAAa,cAF8B,EAAX7D,MAEJ6D,EAAU3B,QAClC,OAAO,wBAEX,IAAM4B,EAAQD,EAAUzB,KAAKyB,UAC7B,OACI,8BACKC,EAAMlC,KAAI,SAAAmC,GAAC,OAAI,cAAC,EAAD,CAAqBV,KAAMU,GAAZA,EAAEtD,UCK9BuD,G,MAdM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACdC,EAAQD,EAAaR,UAAYQ,EAAaR,UAAUrC,QAAQ,IAAK,KAAO,GAC5EsC,EAASO,EAAaN,QAAUM,EAAaN,QAAQvC,QAAQ,IAAK,KAAO,GACzE+C,EAAUF,EAAaG,MAAb,GAA2BH,EAAaG,MAAb,GAA2B,GAChEd,EAASW,EAAaV,YAAb,GAAiCU,EAAaV,YAAb,GAAiC,GACjF,OACI,sBAAK7C,UAAU,kBAAf,UACI,6BAAKyD,IACL,4BAAIb,IACJ,0CAAaY,KACb,kDAAeR,UCEZW,EAXQ,SAAC,GAAoC,IAAlCrE,EAAiC,EAAjCA,KAAMsE,EAA2B,EAA3BA,qBAC5B,GAAa,eAATtE,GAAyBsE,EAAqBpC,QAC9C,OAAO,wBAEX,IAAMqC,EAAmBD,EAAqBlC,KAAKkC,qBACnD,OACI,8BACKC,EAAiB3C,KAAI,SAAA4C,GAAC,OAAI,cAAC,EAAD,CAAyBP,aAAcO,GAApBA,EAAE/D,UCqB7CgE,MArBf,WACE,IAAMxC,EAAUyC,mBAASjF,GACnBsD,EAAU2B,mBAAS/E,GACnBkE,EAAYa,mBAAS9E,GACrB0E,EAAuBI,mBAAS7E,GAJzB,EAMWmB,mBAAS,WANpB,mBAMNhB,EANM,KAMAD,EANA,KAUb,OCnB4B,WAC1B,IAAM4E,EAASC,SAASC,eAAe,UAEnCC,EAAa,EACjBF,SAASG,iBAAiB,UAAU,WAChC,IAAIC,EAAWzE,OAAO0E,YAClBN,GAAUA,EAAOO,QAEbP,EAAOO,MAAMC,IADbH,GAAYF,GACQH,EAAOS,aAAe,KAEvB,MAEvBN,EAAavE,OAAO0E,gBDM9BI,GAEE,gCACE,cAAC,EAAD,CAAStF,QAASA,EAASC,KAAMA,IACjC,cAACsF,EAAD,CAAYtF,KAAMA,EAAMiC,QAASA,IACjC,cAAC,EAAD,CAAajC,KAAMA,EAAM+C,QAASA,IAClC,cAAC,EAAD,CAAe/C,KAAMA,EAAM6D,UAAWA,IACtC,cAAC,EAAD,CAAgB7D,KAAMA,EAAMsE,qBAAsBA,QEfzCiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wBCORQ,EAAOC,YAAe,CAC1BC,IAAK,+CAGDC,EAAS,IAAIC,IAAa,CAC9BJ,OACAK,MAAO,IAAIC,MAGbC,IAASC,OACP,cAAC,iBAAD,CAAgBL,OAAQA,EAAxB,SACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAQ1BU,M","file":"static/js/main.c600ecb7.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const GetAllCameras = gql`\r\nquery GetAllCameras { \r\n    cameras {\r\n      cameraId\r\n      name\r\n      lat\r\n      lon\r\n      presets {\r\n        presetId\r\n        presentationName\r\n        imageUrl\r\n        measuredTime\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GetAllCarParks = gql`\r\nquery GetAllCarParks {\r\n    carParks {\r\n      carParkId\r\n      name\r\n      lat\r\n      lon\r\n      maxCapacity\r\n      spacesAvailable\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GetAllRoadworks = gql`\r\nquery GetAllRoadworks { \r\n  roadworks {\r\n    id\r\n    roadworkId\r\n    severity\r\n    status\r\n    startTime\r\n    endTime\r\n    description {\r\n      fi\r\n    }\r\n  } \r\n}\r\n`;\r\n\r\nexport const GetAllTrafficAnnouncements = gql`\r\nquery GetAllTrafficAnnouncements { \r\n  trafficAnnouncements {\r\n    id\r\n    announcementId\r\n    title {\r\n      fi\r\n    }\r\n    description {\r\n      fi\r\n    }\r\n    startTime\r\n    endTime\r\n  }\r\n}\r\n`;\r\n","import React from 'react';\r\nimport '../css/menubar.css'\r\n\r\nconst Menubar = ({ setPage, page }) => {\r\n    let styleParkki = page === 'parking' ? 'clickedB' : ''\r\n    let styleCameras = page === 'cameras' ? 'clickedB' : ''\r\n    let styleRoadW = page === 'roadworks' ? 'clickedB' : ''\r\n    let styleTrafficAnn = page === 'trafficann' ? 'clickedB' : ''\r\n\r\n    const clickHandler = (pageinfo) => {\r\n        setPage(pageinfo)\r\n        window.scrollTo(0, 0)\r\n    }\r\n    return (\r\n        <div id='navbar' className='menubarContainer'>\r\n            <div onClick={() => clickHandler('cameras')} className={'menubarButton ' + styleCameras}>Kamerat</div>\r\n            <div onClick={() => clickHandler('parking')} className={'menubarButton ' + styleParkki}>Parkkitilat</div>\r\n            <div onClick={() => clickHandler('roadworks')} className={'menubarButton ' + styleRoadW}>Tiety√∂t</div>\r\n            <div onClick={() => clickHandler('trafficann')} className={'menubarButton ' + styleTrafficAnn}>Tiedotteet</div>\r\n        </div>)\r\n}\r\n\r\nexport default Menubar","import React, { useState } from 'react';\r\nimport '../css/cameraComponents.css'\r\n\r\nconst PresetImage = ({ imageUrl, time, presentationName }) => {\r\n    const [showlarge, setShowLarge] = useState(false)\r\n    const aika = time ? time.replace('T', ' ').replace('Z', '').replace('.000', '') : ''\r\n    const suunta = presentationName ? presentationName : ''\r\n\r\n    const toggleImage = (info) => {\r\n        setShowLarge(!info)\r\n    }\r\n    let imageclass = showlarge ? 'largeImage' : 'smallImage'\r\n    return (\r\n        <div >\r\n            <img onClick={() => toggleImage(showlarge)} className={imageclass} src={imageUrl} alt='not found' ></img>\r\n            <br></br>\r\n            <label className='timestamp'>{aika + ' ' + suunta}</label>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default PresetImage","import React from 'react';\r\nimport '../css/cameraComponents.css'\r\nimport PresetImage from './PresetImage'\r\n\r\nconst CameraComp = ({ name, presets }) => {\r\n\r\n    return (\r\n        <div className='cameraBox'>\r\n            <span className='headLine'>{name}</span>\r\n            {presets.map(i => <PresetImage key={i.presetId} imageUrl={i.imageUrl}\r\n                time={i.measuredTime} presentationName={i.presentationName}></PresetImage>)}\r\n        </div>)\r\n}\r\n\r\nexport default CameraComp ","import React from 'react';\r\nimport CameraComp from './CameraComp'\r\nimport PresetImage from './PresetImage'\r\n\r\nconst cameraPage = ({ page, cameras }) => {\r\n\r\n    if (page !== 'cameras' || cameras.loading) {\r\n        return <div></div>\r\n    }\r\n    const cameraList = cameras.data.cameras\r\n\r\n    return (\r\n        <div>\r\n            <div className='cameraBox'>\r\n                <PresetImage key='ouluntoriwebcam1' imageUrl='https://kamerat.oulunkaupunki.fi/Kauppatori/picture1.jpg'\r\n                    time='' presentationName='Kauppatori'></PresetImage>\r\n            </div>\r\n            {cameraList.map(k => <CameraComp key={k.cameraId} name={k.name} presets={k.presets}></CameraComp>)}\r\n        </div>)\r\n}\r\n\r\nexport default cameraPage","import React from 'react';\r\nimport '../css/parking.css'\r\n\r\n\r\nconst ParkCard = ({ place }) => {\r\n    const placeName = place.name ? place.name : ''\r\n    const max = place.maxCapacity ? place.maxCapacity : ''\r\n    const available = place.spacesAvailable ? place.spacesAvailable : ''\r\n    return (\r\n        <div className='parkCard'>\r\n            <h3>{placeName}</h3>\r\n            <p>Paikkoja yhteens√§: {max}</p>\r\n            <p>Vapaana: {available}</p>\r\n        </div>)\r\n}\r\n\r\nexport default ParkCard","import React from 'react';\r\nimport ParkCard from './ParkCard';\r\nimport '../css/parking.css'\r\n\r\n\r\nconst ParkingPage = ({ parking, page }) => {\r\n\r\n    if (page !== 'parking' || parking.loading) {\r\n        return <div></div>\r\n    }\r\n    const parkingData = parking.data.carParks\r\n    return (\r\n        <div className='parkingContainer'>\r\n            {parkingData.map(p => <ParkCard key={p.carParkId} place={p}></ParkCard>)}\r\n            <br></br>\r\n        </div>)\r\n}\r\n\r\nexport default ParkingPage","import React from 'react';\r\nimport '../css/roadwork.css'\r\n\r\nconst RoadWork = ({ work }) => {\r\n\r\n    const kuvaus = work.description['fi'] ? work.description['fi'] : ''\r\n    const aloitettu = work.startTime ? work.startTime.replace('T', ' ').replace('Z', '') : ''\r\n    const loppuu = work.endTime ? work.endTime.replace('T', ' ').replace('Z', '').replace('.999', '') : ''\r\n    return (\r\n        <div className='roadWorkContainer'>\r\n            <p>{kuvaus}</p>\r\n            <div>Ty√∂ aloitettu: {aloitettu}</div>\r\n            <div>Ty√∂ p√§√§ttyy: {loppuu}</div>\r\n        </div>)\r\n}\r\n\r\nexport default RoadWork","import React from 'react';\r\nimport RoadWork from './RoadWork';\r\n\r\n\r\nconst RoadWorksPage = ({ roadworks, page }) => {\r\n\r\n    if (page !== 'roadworks' || roadworks.loading) {\r\n        return <div></div>\r\n    }\r\n    const roadW = roadworks.data.roadworks\r\n    return (\r\n        <div>\r\n            {roadW.map(w => <RoadWork key={w.id} work={w}></RoadWork>)}\r\n        </div>)\r\n}\r\n\r\nexport default RoadWorksPage","import React from 'react';\r\nimport '../css/trafficannouncement.css'\r\n\r\nconst Announcement = ({ announcement }) => {\r\n    const alkaa = announcement.startTime ? announcement.startTime.replace('T', ' ') : ''\r\n    const loppuu = announcement.endTime ? announcement.endTime.replace('T', ' ') : ''\r\n    const otsikko = announcement.title['fi'] ? announcement.title['fi'] : ''\r\n    const kuvaus = announcement.description['fi'] ? announcement.description['fi'] : ''\r\n    return (\r\n        <div className='announcementBox'>\r\n            <h4>{otsikko}</h4>\r\n            <p>{kuvaus}</p>\r\n            <div>Alkaa: {alkaa}</div>\r\n            <div>P√§√§ttyy: {loppuu}</div>\r\n        </div>)\r\n}\r\n\r\nexport default Announcement","import React from 'react';\r\nimport Announcement from './Announcement';\r\n\r\n\r\nconst TrafficAnnPage = ({ page, trafficAnnouncements }) => {\r\n    if (page !== 'trafficann' || trafficAnnouncements.loading) {\r\n        return <div></div>\r\n    }\r\n    const announcementData = trafficAnnouncements.data.trafficAnnouncements\r\n    return (\r\n        <div>\r\n            {announcementData.map(a => <Announcement key={a.id} announcement={a}></Announcement>)}\r\n        </div>)\r\n}\r\n\r\nexport default TrafficAnnPage","import './css/App.css';\nimport React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks';\nimport { GetAllCameras, GetAllCarParks, GetAllRoadworks, GetAllTrafficAnnouncements } from './graphql/queries'\nimport Menubar from './components/Menubar';\nimport CameraPage from './components/CameraPage';\nimport ParkingPage from './components/ParkingPage';\nimport { scrollListener } from './utils/functions'\nimport RoadWorksPage from './components/RoadWorksPage';\nimport TrafficAnnPage from './components/TrafficAnnPage';\n\nfunction App() {\n  const cameras = useQuery(GetAllCameras)\n  const parking = useQuery(GetAllCarParks)\n  const roadworks = useQuery(GetAllRoadworks)\n  const trafficAnnouncements = useQuery(GetAllTrafficAnnouncements)\n\n  const [page, setPage] = useState('cameras')\n\n\n  scrollListener()\n  return (\n    <div >\n      <Menubar setPage={setPage} page={page}></Menubar>\n      <CameraPage page={page} cameras={cameras}></CameraPage>\n      <ParkingPage page={page} parking={parking}></ParkingPage>\n      <RoadWorksPage page={page} roadworks={roadworks}></RoadWorksPage>\n      <TrafficAnnPage page={page} trafficAnnouncements={trafficAnnouncements}></TrafficAnnPage>\n    </div>\n  );\n}\n\nexport default App;\n","\r\n\r\nexport const scrollListener = () => {\r\n    const navbar = document.getElementById('navbar')\r\n\r\n    let lastscroll = 0\r\n    document.addEventListener('scroll', () => {\r\n        let position = window.pageYOffset\r\n        if (navbar && navbar.style) {\r\n            if (position >= lastscroll) {\r\n                navbar.style.top = -navbar.clientHeight + 'px'\r\n            } else {\r\n                navbar.style.top = '0px'\r\n            }\r\n            lastscroll = window.pageYOffset\r\n        }\r\n    })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './css/index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { createHttpLink } from \"apollo-link-http\";\n\n\nconst link = createHttpLink({\n  uri: 'https://api.oulunliikenne.fi/proxy/graphql'\n})\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'))\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}